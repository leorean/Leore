<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskSword</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-15</depth>
  <persistent>0</persistent>
  <parentName>objLiving</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = 0;
yVel = 0;

angle = 0;
minAngle = 0;
maxAngle = 0;
velAngle = 15;
angleDir = 1;
off_x = 0;
off_y = 0;

state = IDLE;
dir = DOWN;
dist = 0;
maxDist = TILE;

dsObjects = ds_list_create();

type = 0;
len = 0;
dmg = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(dsObjects);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state != G_PLAY) exit;

switch(state) {
    case IDLE:
        x = -100;
        y = -100;
        dir = objPlayer.dir;
        switch(dir) {
            case UP:
                minAngle = 0;
                maxAngle = 90;
                angleDir = 1;
                off_y = -2;
                off_x = -8;
            break;
            case DOWN:
                minAngle = 180;
                maxAngle = 270;
                angleDir = 1;
                off_y = 4;
                off_x = 6;
            break;
            case LEFT:
                minAngle = 90;
                maxAngle = 180;
                angleDir = 1;
                off_y = 0;
                off_x = 0;                
            break;
            case RIGHT:
                minAngle = 90;
                maxAngle = 0;
                angleDir = -1;
                off_y = 0;
                off_x = 0;                
            break;
        }
        angle = minAngle;
        dist = 0;
        ds_list_clear(dsObjects);
    break;
    case ATTACK:
        angle += sign(angleDir) * velAngle;
    
        x = objPlayer.cx + off_x + lengthdir_x(dist, angle);
        y = objPlayer.cy + off_y + lengthdir_y(dist, angle);
                
        if (sign(angleDir) * angle &gt;= sign(angleDir) * maxAngle) {
            dist = max(dist - 4, 0);
            if (dist == 0) {
                objPlayer.state = IDLE;
                state = IDLE;
            }
        } else {
            dist = min(dist + 2, maxDist);
        }

        // DESTROYING
        
        switch(type) {
            case 0:
                len = 16;
                dmg = 1;
            break;
            case 1:
                len = 24;
                dmg = 1.5;
            break;
            case 2:
                len = 32;
                dmg = 2.5;
            break;
        }
        
        instance_deactivate_object(objDestroyable);
        instance_deactivate_object(objEnemy);        
        instance_activate_region(x - 32, y - 32, 64, 64, true);
        
        for(var i = 0; i &lt; instance_number(objDestroyable) + instance_number(objEnemy); i++) {
        
            var t_d = instance_find(objDestroyable, i);
            var t_e = instance_find(objEnemy, i);

            var x1 = x;
            var y1 = y;
            var x2 = x + lengthdir_x(len, angle);
            var y2 = y + lengthdir_y(len, angle);
            
            // DESTROYABLES
            if (collision_line(x1, y1, x2, y2, t_d, false, true)) {
                if (ds_list_find_index(dsObjects, t_d.id) == -1) {
                
                    
                    if (t_d.hp &gt; 0) {
                        var eff = instance_create(t_d.x, t_d.y, objEffect);
                        eff.type = 0;
                    }
                    
                    t_d.hp = max(t_d.hp - dmg, 0);
                    
                    if (t_d.hp &gt; 0) {                    
                        ds_list_add(dsObjects, t_d.id);                
                    }
                }
            }
            // ENEMIES
            if (collision_line(x1, y1, x2, y2, t_e, false, true)) {
                if (ds_list_find_index(dsObjects, t_e.id) == -1) {
                
                    if (!t_e.hurt) {
                        if (t_e.hp &gt; 0) {
                        
                            var eff = instance_create(t_e.x, t_e.y, objEffect);
                            eff.type = 0;
                            
                            t_e.hp = max(t_e.hp - dmg, 0);
                            
                            t_e.hurt = 20;
                            var kbAngle = point_direction(objPlayer.cx, objPlayer.cy, t_e.x, t_e.y);
                            t_e.xVel = lengthdir_x(3, kbAngle);
                            t_e.yVel = lengthdir_y(3, kbAngle);

                            ds_list_add(dsObjects, t_e.id);                
                        }
                    }
                }
            }          
        }
        instance_activate_object(objDestroyable);
        instance_activate_object(objEnemy);        
        
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprSword, type, x, y, 1, 1, angle, c_white, 1);

if (global.debug) {
    var x1 = x;
    var y1 = y;
    var x2 = x + lengthdir_x(len, angle);
    var y2 = y + lengthdir_y(len, angle);
    
    draw_line_colour(x1, y1, x2, y2, c_red, c_red);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
