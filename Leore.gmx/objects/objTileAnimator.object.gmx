<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>animation_tile_index = 0;
animation_direction = RIGHT;

//animation_tiles = tile_get_ids_at_depth(LAYER_WATER);

var all_tiles = tile_get_ids();
var l = 0;
for (var i = 0; i &lt; array_length_1d(all_tiles); i++) {
    var t = all_tiles[i];    
    var a = getTileCoordinatesForIndex(658);
    
    if (tile_get_left(t) == a[0] &amp;&amp; tile_get_top(t) == a[1]) {
        animation_tiles[l] = t;        
        l++;
    }
}

// store "left" for all tiles to refer to
for (var i = 0; i &lt; array_length_1d(animation_tiles); i++) {
    animation_tiles_left[i] = tile_get_left(animation_tiles[i]);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.timer % 50 == 0) {
    animation_tile_index += animation_direction;
    
    if (animation_tile_index == 3)
        animation_direction = LEFT;
    if (animation_direction == LEFT &amp;&amp; animation_tile_index == 0)
        animation_direction = RIGHT;
            
    for (var i = 0; i &lt; array_length_1d(animation_tiles); i++) {
        var t = animation_tiles[i];
        tile_set_region(t, animation_tiles_left[i] + TILE*animation_tile_index, tile_get_top(t), TILE, TILE);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
