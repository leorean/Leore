<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskEnemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = 0;
yVel = 0;
hurt = 0;
hp = 1;
xCol = false;
yCol = false;
type = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel *= .93;
yVel *= .93;
hurt = max(hurt - 1, 0);

if(hp == 0) {
    var eff = instance_create(x, y, objEffect);
    eff.type = 2;
    instance_destroy();
}

if (collision_point(x, y, objHole, 0, 1)) {
    hp = 0;
}

instance_deactivate_object(objAny);
instance_activate_region(x - 32, y - 32, 64 ,64, true);
for (var i = 0; i &lt; instance_number(objAny); i++) {
    var s = instance_find(objAny, i);
    if (is(s, objSolid)
    &amp;&amp; !is(s, objHole)) {
        if (place_meeting(x + xVel, y, s)) {
            xCol = true;
        }
        if (place_meeting(x, y + yVel, s)) {
            yCol = true;
        }
    }
    if(place_meeting(x + xVel, y + yVel, s) &amp;&amp;
        s.id != id &amp;&amp; is(s, objEnemyBall) &amp;&amp; s.hp &gt; 0) {
        
        var angle = point_direction(x, y, s.x, s.y);

        var vel = max(abs(xVel), abs(yVel), 1);

        xVel = lengthdir_x(-vel, angle);
        yVel = lengthdir_y(-vel, angle);
        s.xVel = lengthdir_x(vel, angle);
        s.yVel = lengthdir_y(vel, angle);
        
    }
}
instance_activate_object(objAny);

if (!xCol) {
    x += xVel;
} else {
        xVel = -xVel;
}
if (!yCol) {
    y += yVel;
} else {
    yVel = -yVel;
}
x = max(min(x, room_width - 8), 8);
y = max(min(y, room_height - 8), 8);
xCol = false;
yCol = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
