<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskLevelMap</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>w = room_width / TILE;
h = room_height / TILE;

map = ds_grid_create(w, h);

for (var i = 0; i &lt; w; i++) {
    for (var j = 0; j &lt; h; j++) {
        val = 0;
        if (instance_place(i*TILE, j*TILE, objSolid))
        {
            val = 1;
        } else {
            var t = tile_layer_find(LAYER_WATER,i*TILE, j*TILE);
            if (t)
            t = getTileIndexForCoordinates(tile_get_left(t), tile_get_top(t));
            
            if (t &gt; 0) {
                val = 2;
            }
            if (isWaterTile(t)) {
                val = 3;
            }
            log(t);
        }
        ds_grid_add(map, i, j, val);
    }
}
sprMap = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_grid_destroy(map);
sprite_delete(sprMap);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprMap = noone) {

    var surf = surface_create(w, h);
    surface_set_target(surf);
    
    for (var i = 0; i &lt; w; i++) {
        for (var j = 0; j &lt; h; j++) {
            val = ds_grid_get(map, i, j);
            col = c_black;
            switch(val) {
                default: // nothing
                    col = make_color_hsv(0, 0, 0);
                break;
                case 1: // solid
                    col = make_color_hsv(15, 180, 190);
                break;
                case 2: // water
                    col = make_color_hsv(130, 255, 255);
                break;
                case 3: // deepwater
                    col = make_color_hsv(145, 255, 255);
                break;
            }
            if (val) {
                draw_set_color(col);
                draw_point(i, j);
            }
        }
    }    
    sprMap = sprite_create_from_surface(surf, 0, 0, w, h, 0, 0, 0, 0);
    
    surface_reset_target();
    surface_free(surf);
}

if (global.state != G_PLAY &amp;&amp; global.state != G_PAUSE) exit;

xo = view_wview - sprite_get_width(sprMap) - 3;
yo = view_hview - sprite_get_height(sprMap) - 3;

draw_set_alpha(1);
draw_sprite_ext(sprMap, -1, xo, yo, 1, 1, 0, c_white, .75);

var px = objPlayer.x / room_width;
var py = objPlayer.y / room_height;
draw_sprite(mskPixel, -1, xo + px * sprite_get_width(sprMap) , yo + py * sprite_get_height(sprMap)); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
